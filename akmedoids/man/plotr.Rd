% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotr.R
\name{plotr}
\alias{plotr}
\title{Plotting trajectory grouping}
\usage{
plotr(clustr, traj, id_field = TRUE, type = "lines",
  y.scaling = "fixed")
}
\arguments{
\item{clustr}{[vector (charater)] A vector of cluster membership (labels). For instance, the result extracted from the \code{\link{akmedoids.clust}} function. See the @example.}

\item{traj}{[matrix (numeric)]: corresponding longitudinal data used to generate \code{clustr} (with rows corresponding to each label of \code{clustr}). For example, the first label of \code{clustr} is the group label of the first row of \code{traj} matrix, and so on.}

\item{id_field}{[numeric or character] Whether the first column of the \code{traj} is a unique (\code{id}) field. Default: \code{FALSE}. If \code{TRUE} the function recognises the second column as the first time step.}

\item{type}{[character] plot type. Available options are: \code{"lines"} and "stacked".}

\item{y.scaling}{[character] works only if \code{type="lines"}. \code{y.scaling} set the vertical scales of the cluster panels. Options are: \code{"fixed"}: uses uniform scale for all panels, \code{"free"}: uses variable scales for panels.}
}
\value{
A plot showing group trajectories or size.
}
\description{
This function can be used to visualise the trajectory groupings generated by the \code{\link{akmedoids.clust}} function, and print out some descriptive statitics of each group.
}
\details{
Given a vector of group membership (labels) and the corresponding data matrix (or data.frame) sorted in corresponding order, this function generates
either a line plot of group trajectories (including mean trajectories) or a stacked area chart showing the proportion observation (in each group) of over time. Some useful descriptive statistics of each group are also generated.
This plot function is provided to provide basic visualisation of the cluster groups based on a few parameters from the \code{ggplot} library (\code{Wickham H. (2016)}), therefore, for a better control of the plot, we recommend using the ggplot directly.
}
\examples{
traj <- gm.crime.sample1
print(traj)
traj <- dataImputation(traj, id_field = TRUE, method = 1, replace_with = 1, fill_zeros = FALSE) #filling the missing values
print(traj)
traj <- props(traj, id_field = TRUE)
clustr <- akmedoids.clust(traj, id_field = TRUE, method = "linear", k = c(3,6))
clustr <- as.vector(clustr$optimSolution)
print(plotr(clustr, traj, id_field=TRUE, type="lines", y.scaling="fixed"))
}
\references{
\code{Wickham H. (2016). Elegant graphics for Data Analysis. Spring-Verlag New York (2016)}
}
\keyword{clusters}
\keyword{plot,}
